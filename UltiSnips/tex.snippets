extends plaintex

global !p


def get_from_line_above(pattern, default='', full_output=False):
	import re
	import vim
	line = vim.current.range.start
	buf = vim.current.buffer
	def _is_defining_line(i):
		return True if re.search(pattern, buf[i]) else False
	key_line = next((i for i in range(line-1, -1, -1) if _is_defining_line(i)),
					None)
	if key_line is not None:
		m = re.search(pattern, buf[key_line])
		if m:
			return (m.group(1), key_line) if full_output else m.group(1)
	return (default, None) if full_output else default

endglobal


snippet todo "\todo{...}" w
\todo{${1:${VISUAL:Task}}}
endsnippet


snippet todo: "% TODO: ..." w
% TODO: ${1:${VISUAL:Task}}
endsnippet


snippet up "\usepackage{...}" b
\usepackage[$1]{${2:${VISUAL:package}}}
endsnippet


snippet newenv "Define a new environment" b
\newenvironment{${1:EnvName}}{%
	${2:opening}
}{%
	${3:closing}
}
endsnippet


snippet lu "LU: New LU (Learning Unit)" !b
% LU: ${1:LU Name}
\begin{minipage}{2.6in}
\begin{center}{\bf ${2:${VISUAL:Title}}}\end{center}\medskip
${3:$1}
\end{minipage}

\begin{minipage}{2.6in}
${4:Correct Answer}
\end{minipage}
endsnippet


#snippet h "LU: Heading line" !b
#\begin{center}{\bf ${1:${VISUAL:Title}}}\end{center}\medskip
#endsnippet

#snippet f "LU: Framed formula" !b
#\begin{empheq}{align*}
#	${1:${VISUAL:formula}}
#\end{empheq}
#endsnippet

#snippet a "\begin{align*} ... \end{align*}" b
#\begin{align*}
#	${1:${VISUAL:formula}}
#\end{align*}
#endsnippet

#snippet m "\begin{multline*} ... \end{multline*}" b
#\begin{multline*}
#	${1:${VISUAL:formula}}
#\end{multline*}
#endsnippet

#snippet t "\\text{...}" !w
#\text{${1:${VISUAL:...}}}
#endsnippet


snippet enum "enumerate block" b
\begin{enumerate}
	\item ${1:${VISUAL}}
\end{enumerate}
endsnippet


snippet item "itemize block" b
\begin{itemize}
	\item ${1:${VISUAL}}
\end{itemize}
endsnippet


snippet i "\\item" b
\item $0
endsnippet


snippet big( "big( ... big)" !w
\big( ${1:${VISUAL}} \big)
endsnippet

snippet big[ "big[ ... big]" !w
\big[ ${1:${VISUAL}} \big]
endsnippet

snippet big{ "big{ ... big}" !w
\big\\{ ${1:${VISUAL}} \big\\}
endsnippet


snippet Big( "Big( ... Big)" !w
\Big( ${1:${VISUAL}} \Big)
endsnippet

snippet Big[ "Big[ ... Big]" !w
\Big[ ${1:${VISUAL}} \Big]
endsnippet

snippet Big{ "Big{ ... Big}" !w
\Big\\{ ${1:${VISUAL}} \Big\\}
endsnippet


snippet lr< "< ... >" !w
\langle ${1:${VISUAL}} \rangle
endsnippet


snippet fr "Fraction" w
\frac{${1:${VISUAL:nom}}}{${2:denom}}
endsnippet

snippet tfr "Text fraction (\tfrac{...}{...})" w
\tfrac{${1:${VISUAL:nom}}}{${2:denom}}
endsnippet

snippet oo "\infty" w
\infty
endsnippet


#snippet fp "figPut - Fancy figure with caption" b
#\figPut${1:[tbh]}{\includegraphics[width=${2:.4\linewidth}]{${3:image}}}{${4:${VISUAL:The caption.}}}{${5:figname}}
#endsnippet


#snippet fpr "figPutRows - Fancy multi-figure with caption" b
#\figPutRows[${1:tbp}]{%
#	\figII[~]
#		{\includegraphics[trim=0 0 0 0,clip,width=.48\textwidth]{${3:img1}}}{}%
#		{\includegraphics[trim=0 0 0 0,clip,width=.48\textwidth]{${4:img2}}}{}
#
#	\vspace*{2ex}
#	\figII[~]
#		{\includegraphics[trim=0 0 0 0,clip,width=.48\textwidth]{${5:img3}}}{}%
#		{\includegraphics[trim=0 0 0 0,clip,width=.48\textwidth]{${6:img4}}}{}%
#}{%
#	${7:The caption.}
#}{fig:${2:TODO}}
#endsnippet


snippet fig2 "2 figures side by side (subfigure)" b
\begin{figure}${1:[tpb]}\centering%
	\subfigure[]{%
		\includegraphics[width=0.45\textwidth]{${2:img1}}%
		\label{fig:$1_a}
	}%
	\subfigure[]{%
		\includegraphics[width=0.45\textwidth]{${3:img2}}%
		\label{fig:$1_b}
	}
	\caption{\label{fig:${4:TODO}}%
		${5:${VISUAL:...}}
	}
\end{figure}
endsnippet


snippet fig "figure" b
\begin{figure}
	\includegraphics[width=0.45\linewidth]{${1:image}}%
	\caption[]{\label{fig:${2:TODO}}%
		${3:${VISUAL:...}}
	}
\end{figure}
endsnippet


snippet sfig "figure with side caption" b
\begin{SCfigure}
	\includegraphics[width=0.45\linewidth]{${1:image}}%
	\caption[]{\label{fig:${2:TODO}}%
		${3:${VISUAL:...}}
	}
\end{SCfigure}
endsnippet


snippet if "if... then... else..." b
\ifthenelse{${1:\equal{${2:\foo}}{${3:bar}}}}{%
	${4:${VISUAL:ifyes}}
}{${5:%
	ifno
}}
endsnippet


snippet ref "Reference" w
\ref{$1}
endsnippet


snippet sref "Sec.~\ref{sec:...} -> Sec.~IV" w
Sec.~\ref{sec:$1}$0
endsnippet

snippet ssref "Sec.~\ref{sub:...} -> Sec.~IV.A" w
Sec.~\ref{sub:$1}$0
endsnippet


#\eqref{eq:$1}$0
snippet eqref "Reference equation Eq.~(1)" w
Eq.~\eqref{eq:$1}
endsnippet


snippet eref "Reference equation (1)" w
\eqref{eq:$1}
endsnippet


snippet enref "\eqnref{eq:...} -> equation (2.1)" w
\eqnref{eq:$1}$0
endsnippet


#\figref{fig:$1}$0
snippet fref "Reference figure" w
Fig.~\ref{fig:$1}
endsnippet


#\tabref{tab:$1}$0
snippet tref "Refernce table" w
Tab.~\ref{tab:$1}
endsnippet


snippet cite "\autocite[]{}" w
\\${1:auto}cite${3:[]}{$2}$0
endsnippet


snippet l "\label{}" w
\label{$1}$0
endsnippet


###############################
#  Tweaking default Snippets  #
###############################

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{%
		${2:caption}
	}
	\label{tab:${3:label}}
	\begin{${4:t}${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${5:c}}
	\toprule
		$6${5/((?<=.)c|l|r)|./(?1: & )/g}
	\\\\\midrule
		$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\bottomrule
	\end{$4${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
\end{table}
endsnippet


#snippet b "\\begin{} ... \\end{} block" !b
#\begin{${1:block_type}}${2:[${3:options}]}
#${4:$VISUAL}
#\end{$1}
#endsnippet

snippet "b(egin)?" "begin{} / end{}" !br
\begin{${1:something}}${2:[${3:options}]}
	${0:${VISUAL}}
\end{$1}
endsnippet


snippet eq "Equation" b
\begin{equation}\label{eq:${1:name}}
	${2:${VISUAL}}
\end{equation}
endsnippet

snippet eq* "Equation without number" b
\begin{equation*}
	${1:${VISUAL}}
\end{equation*}
endsnippet

snippet subeq "subequations" b
\begin{subequations}\label{eq:${1:TODO}}
	\begin{align}
		\label{eq:$1_${2:TODO}}
		${3:${VISUAL}}
	\end{align}
\end{subequations}
endsnippet

snippet ali "\begin{align(ed)}" b
\begin{align${1:ed}}`!p
if snip.c in ("", "\\label{eq:"):
	if not t[1]:
		snip.rv = "\\label{eq:"
	else:
		snip.rv = ""
else:
	snip.rv = snip.c
`$2`!p
if snip.c in ("", "}"):
	if not t[1]:
		snip.rv = "}"
	else:
		snip.rv = ""
else:
	snip.rv = snip.c
`
	${3:${VISUAL}}
\end{align$1}
endsnippet


snippet cha "Chapter" b
\chapter{${1:${VISUAL:Chapter Name}}}
endsnippet


snippet sec "Section" b
\section{${1:${VISUAL:Section Name}}}
endsnippet
#\label{sec:${2:`!p
#import re
#snip.rv = re.sub('[^0-9a-zA-Z]+', '', ''.join(w[0].upper() + w[1:] for w in t[1].split()))
#`}}
#
#${0}

snippet sub "Subsection" b
\subsection{${1:${VISUAL:Subsection Name}}}
endsnippet
#\label{sub:${2:`!p
#import re
#snip.rv = re.sub('[^0-9a-zA-Z]+', '', ''.join(w[0].upper() + w[1:] for w in t[1].split()))
#`}}
#
#${0}

snippet ssub "Subsubsection" b
\subsubsection{${1:${VISUAL:Subsubsection Name}}}
endsnippet
#\label{ssub:${2:`!p
#import re
#snip.rv = re.sub('[^0-9a-zA-Z]+', '', ''.join(w[0].upper() + w[1:] for w in t[1].split()))
#`}}
#
#${0}

snippet sub* "Subsection w/o number" b
\subsection*{${1:${VISUAL}}}
endsnippet

snippet ssub* "Subsubsection w/o number" b
\subsubsection*{${1:${VISUAL}}}
endsnippet

snippet par "Paragraph head" b
\paragraph{${1:${VISUAL}}}
endsnippet


snippet frame "beamer frame" b
\begin{frame}\frametitle{${1:`!p
if not snip.c:
	snip.rv = get_from_line_above(r"\\(?:frametitle|subsection|section)\{(.+)\}", "title")
else:
	snip.rv = snip.c`}} % {{{2
	${2:${VISUAL:content}}
\end{frame}
%\endinput % skip the remainder of this file
endsnippet


snippet vframe "fullscreen video frame" b
\begin{frame}[plain] \def\myvideofile{videos/${1:video}} % {{{2
	\centering
	\begin{tikzpicture}[remember picture,overlay]
		\node[at=(current page.center)] {
			\href{run:\myvideofile.mp4?autostart&loop}{%
				\includegraphics[keepaspectratio,width=\paperwidth,height=\paperheight]{%
					\myvideofile-f000000%
				}%
			}%
		};
	\end{tikzpicture}
\end{frame}
%\endinput % skip the remainder of this file
endsnippet


snippet video "video" b
\def\myvideofile{videos/${1:video}}
\href{run:\myvideofile.mp4?autostart&loop}{%
	\includegraphics[keepaspectratio,width=0.8\paperwidth]{%
		\myvideofile-f000000%
	}%
}%
endsnippet


snippet source "source reference (TikZ)" b
\begin{tikzpicture}[remember picture,overlay]
	\node[xshift=0.5em,yshift=0.0em,anchor=south west] at (current page.south west) {
		\tiny (source: ${1:authors}, ${2:ref}${3:, modified})
	};
\end{tikzpicture}
endsnippet


snippet tikz "TikZ picture" b
\begin{tikzpicture}[remember picture,overlay]
	\node[xshift=0em,yshift=0em,anchor=south west] at (current page.south west) {
		${1:${VISUAL:...}}
	};
\end{tikzpicture}
endsnippet


snippet inc "\includegraphics{...}" b
\includegraphics[width=${2:0.5}\linewidth,valign=t]{${1:imagefile}}
endsnippet


snippet bibi "beamer bibitem" b
%\setbeamertemplate{bibliography item}[default]
\bibitem[${1:Author}, ${2:year}]{$1$2}
	$1
	\newblock {\em ${3:title}}.
	\newblock ${4:details}.
endsnippet


snippet cols "columns (beamer)" b
\begin{columns}
	\column{0.5\textwidth}
		${1:${VISUAL:content}}
	\column{0.5\textwidth}
\end{columns}
endsnippet


snippet def "Definition" b
\begin{defn}[${1:Item}]\label{def:${2:todo}}
	${3:${VISUAL:...}}
\end{defn}
endsnippet

snippet thm "Theorem" b
\begin{thm}[${1:Item}]\label{thm:${2:todo}}
	${3:${VISUAL:...}}
\end{thm}
endsnippet

snippet rem "Remark" b
\begin{rem}
	${1:${VISUAL:...}}
\end{rem}
endsnippet


snippet S "Surf" w
$\Surf$
endsnippet

snippet Sout "S_outer" w
$\Sout$
endsnippet

snippet Sin "S_inner" w
$\Sin$
endsnippet

snippet S1 "S_{1}" w
$\Sone$
endsnippet

snippet S2 "S_{2}" w
$\Stwo$
endsnippet

snippet S12 "S_{1,2}" w
$\Sonetwo$
endsnippet

snippet Hout "H_outer" w
$\Hout$
endsnippet

snippet Hin "H_inner" w
$\Hin$
endsnippet

snippet H1 "H_{1}" w
$\Hone$
endsnippet

snippet H2 "H_{2}" w
$\Htwo$
endsnippet

snippet H12 "H_{1,2}" w
$\Honetwo$
endsnippet

snippet ttouch "T_touch" w
$\ttouch$
endsnippet

snippet T- "$\Theta_{-}$" w
$\Theta_{-}$
endsnippet

snippet T-m "\Theta_{-}" w
\Theta_{-}
endsnippet

snippet T+ "$\Theta_{+}$" w
$\Theta_{+}$
endsnippet

snippet T+m "\Theta_{+}" w
\Theta_{+}
endsnippet

snippet T+- "$\Theta_{+-}$" w
$\Theta_{\pm}$
endsnippet

snippet T+-m "\Theta_{+-}" w
\Theta_{\pm}
endsnippet

snippet Tn "$\Theta_{(n)}$" w
$\Theta_{(n)}$
endsnippet

snippet Tl "$\Theta_{(ell)}$" w
$\Theta_{(\ell)}$
endsnippet

snippet 4n "4-nabla" w
{}^{(4)}\nabla
endsnippet


snippet L "$\BW$" w
$\Lambda$
endsnippet

snippet AE9 "$\AEnine$" w
$\AEnine$
endsnippet

snippet K12 "$\Ktwelve$" w
$\Ktwelve$
endsnippet

snippet lK12 "laminated $\Ktwelve$" w
laminated $\Ktwelve$
endsnippet

snippet LK12 "Laminated $\Ktwelve$" w
Laminated $\Ktwelve$
endsnippet

snippet BW "$\BW$" w
$\BW$
endsnippet


snippet Proc "Pseudocode procedure" b
\Procedure{${1:Name}}{${2:args}}
	${3:${VISUAL:\\State}}
\EndProcedure
endsnippet

snippet St "Pseudocode statement" b
\State ${1:${VISUAL:...}}
endsnippet

snippet Ret "Pseudocode return" b
\State \Return ${1:${VISUAL:...}}
endsnippet

snippet Cont "Pseudocode continue" b
\State {\bfseries continue}
endsnippet

snippet Break "Pseudocode break" b
\State {\bfseries break}
endsnippet

snippet gets "Pseudocode assignment" b
\State ${1:\$x\$} \$\gets\$ ${2:${VISUAL:something}}
endsnippet

snippet If "Pseudocode if-endif" b
\If{$1}
	${2:${VISUAL:\\State}}
\EndIf
endsnippet

snippet For "Pseudocode for-loop" b
\For{\$${1:i \\gets 1 \\text\{to\} 10}\$}
	${2:${VISUAL:\\State}}
\EndFor
endsnippet

snippet For "Pseudocode for-all-loop" b
\ForAll{\$${1:x \\in X}\$}
	${2:${VISUAL:\\State}}
\EndFor
endsnippet
